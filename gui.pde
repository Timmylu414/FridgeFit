/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:630841:
  appc.background(230);
} //_CODE_:window1:630841:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:211651:
  reset();
} //_CODE_:button1:211651:

public void button2_click1(GButton source, GEvent event) { //_CODE_:button2:486693:
  if (pressed == true){
    noLoop();
    pressed = false;
    button2.setText("play");
  }
  else if (pressed == false){
    loop();
    pressed = true;
  }
} //_CODE_:button2:486693:

public void healthinessSlider_change1(GSlider source, GEvent event) { //_CODE_:healthinessSlider:270016:
  healthiness = healthinessSlider.getValueI();
  reset();
} //_CODE_:healthinessSlider:270016:

public void spoilRateSlider_change1(GSlider source, GEvent event) { //_CODE_:spoilRateSlider:966716:
  //spoilRate = spoilRateSlider.getValueI()/10;
  reset();
} //_CODE_:spoilRateSlider:966716:

public void shoppingFrequencySlider_change(GSlider source, GEvent event) { //_CODE_:shoppingFrequencySlider:923430:
  println("shoppingFrequencySlider - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:shoppingFrequencySlider:923430:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 400, 300, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  button1 = new GButton(window1, 303, 252, 80, 30);
  button1.setText("reset");
  button1.addEventHandler(this, "button1_click1");
  button2 = new GButton(window1, 17, 251, 80, 30);
  button2.setText("pause");
  button2.addEventHandler(this, "button2_click1");
  healthinessSlider = new GSlider(window1, 26, 46, 100, 67, 10.0);
  healthinessSlider.setShowValue(true);
  healthinessSlider.setLimits(5, 0, 10);
  healthinessSlider.setNbrTicks(10);
  healthinessSlider.setStickToTicks(true);
  healthinessSlider.setShowTicks(true);
  healthinessSlider.setNumberFormat(G4P.INTEGER, 0);
  healthinessSlider.setOpaque(false);
  healthinessSlider.addEventHandler(this, "healthinessSlider_change1");
  label1 = new GLabel(window1, 27, 20, 129, 20);
  label1.setText("Helathiness Of Food");
  label1.setOpaque(false);
  label2 = new GLabel(window1, 25, 116, 104, 20);
  label2.setText("Spoil Rate");
  label2.setOpaque(false);
  spoilRateSlider = new GSlider(window1, 26, 149, 100, 66, 10.0);
  spoilRateSlider.setShowValue(true);
  spoilRateSlider.setLimits(5, 0, 10);
  spoilRateSlider.setNbrTicks(10);
  spoilRateSlider.setStickToTicks(true);
  spoilRateSlider.setShowTicks(true);
  spoilRateSlider.setNumberFormat(G4P.INTEGER, 0);
  spoilRateSlider.setOpaque(false);
  spoilRateSlider.addEventHandler(this, "spoilRateSlider_change1");
  shoppingFrequencySlider = new GSlider(window1, 253, 48, 100, 63, 10.0);
  shoppingFrequencySlider.setShowValue(true);
  shoppingFrequencySlider.setLimits(5, 0, 10);
  shoppingFrequencySlider.setNbrTicks(10);
  shoppingFrequencySlider.setStickToTicks(true);
  shoppingFrequencySlider.setShowTicks(true);
  shoppingFrequencySlider.setNumberFormat(G4P.INTEGER, 0);
  shoppingFrequencySlider.setOpaque(false);
  shoppingFrequencySlider.addEventHandler(this, "shoppingFrequencySlider_change");
  label3 = new GLabel(window1, 253, 17, 121, 20);
  label3.setText("Shopping Frequency");
  label3.setOpaque(false);
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GButton button1; 
GButton button2; 
GSlider healthinessSlider; 
GLabel label1; 
GLabel label2; 
GSlider spoilRateSlider; 
GSlider shoppingFrequencySlider; 
GLabel label3; 
